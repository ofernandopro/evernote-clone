[{"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/index.js":"1","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/App.js":"2","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/reportWebVitals.js":"3","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/header/index.js":"4","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/home/index.js":"5","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/routes.js":"6","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/auth/register/index.js":"7","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/auth/login/index.js":"8","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/users/edit/index.js":"9","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/notes/index/index.js":"10","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/register_form/index.js":"11","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/users.js":"12","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/api.js":"13","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/login_form/index.js":"14","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/private_router/index.js":"15","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/header_logged/index.js":"16","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/index.js":"17","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/notes.js":"18","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/list/index.js":"19","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/editor/index.js":"20"},{"size":500,"mtime":1607118892619,"results":"21","hashOfConfig":"22"},{"size":233,"mtime":1607299970998,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607118892620,"results":"24","hashOfConfig":"22"},{"size":1639,"mtime":1607367250584,"results":"25","hashOfConfig":"22"},{"size":1442,"mtime":1607367505409,"results":"26","hashOfConfig":"22"},{"size":887,"mtime":1607538292825,"results":"27","hashOfConfig":"22"},{"size":1706,"mtime":1607377779565,"results":"28","hashOfConfig":"22"},{"size":1691,"mtime":1608242418271,"results":"29","hashOfConfig":"22"},{"size":160,"mtime":1607366702401,"results":"30","hashOfConfig":"22"},{"size":437,"mtime":1607995047187,"results":"31","hashOfConfig":"22"},{"size":3697,"mtime":1607446724767,"results":"32","hashOfConfig":"22"},{"size":500,"mtime":1607539085133,"results":"33","hashOfConfig":"22"},{"size":110,"mtime":1607440755748,"results":"34","hashOfConfig":"22"},{"size":3258,"mtime":1607537093004,"results":"35","hashOfConfig":"22"},{"size":354,"mtime":1607538142335,"results":"36","hashOfConfig":"22"},{"size":2962,"mtime":1607726723626,"results":"37","hashOfConfig":"22"},{"size":2480,"mtime":1608252265417,"results":"38","hashOfConfig":"22"},{"size":485,"mtime":1608242590122,"results":"39","hashOfConfig":"22"},{"size":2198,"mtime":1608242787643,"results":"40","hashOfConfig":"22"},{"size":772,"mtime":1608252547886,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xe89f4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/index.js",[],["92","93"],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/App.js",["94","95"],"import React, { Fragment } from 'react';\nimport { Notification, Section } from 'rbx';\nimport './App.scss';\nimport Routes from './routes';\n\nconst App = () => (\n    <Fragment>\n        <Routes />\n    </Fragment>\n)\n\nexport default App;\n\n","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/reportWebVitals.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/header/index.js",["96"],"import React from 'react';\nimport { Navbar, Container, Column } from 'rbx';\nimport logoImage from '../../assets/images/logo.png';\nimport '../../styles/header.scss';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <Navbar>\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\">\n                        <img src={logoImage} />\n                    </Link>\n                    <Navbar.Burger\n                        className=\"navbar-burger burger\"\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"navbar-menu\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </Navbar.Burger>\n                </Navbar.Brand>\n\n                <Navbar.Menu id=\"navbar-menu\">\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                        <Column.Group>\n                            <Column>\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-purple\">Register</Link>\n                            </Column>\n                            <Column>\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-purple\">Login</Link>\n                            </Column>\n                        </Column.Group>\n                    </Navbar.Segment>\n                </Navbar.Menu>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/home/index.js",["97"],"import React, { Fragment } from 'react';\nimport PresentationImage from '../../assets/images/presentation.png';\nimport Header from '../../components/header';\nimport { Column, Section, Title, Container } from 'rbx';\nimport { Link } from 'react-router-dom';\nimport '../../styles/home.scss';\n\nconst HomeScreen = () => (\n    <Fragment>\n        <Header />\n\n        <Section size=\"medium\" className=\"home\">\n            <Container>\n                <Column.Group>\n                    <Column size={5}>\n                        <Title size={2} spaced className=\"has-text-white\">\n                            Create notes easily and access whenever you want on the cloud\n                        </Title>\n                        <Title size={5} spaced className=\"has-text-light\" subtitle>\n                            Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\n                        </Title>\n                        <Link to=\"/register\" className=\"button is-outlined is-white is-large\">\n                            <strong>Register now for free</strong>\n                        </Link>\n                    </Column>\n\n                    <Column size={6} offset={1}>\n                        <img src={PresentationImage} />\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n)\n\nexport default HomeScreen;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/routes.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/auth/register/index.js",["98"],"import React, { Fragment } from 'react';\nimport Header from '../../../components/header';\nimport { Column, Section, Title, Container, Card } from 'rbx';\nimport logoImage from '../../../assets/images/logo.png';\nimport '../../../styles/auth.scss';\nimport RegisterForm from '../../../components/auth/register_form';\n\nconst RegisterScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={4}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={logoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <RegisterForm />\n                                </Section>\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n);\n\nexport default RegisterScreen;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/auth/login/index.js",["99"],"import React, { Fragment } from 'react';\nimport Header from '../../../components/header';\nimport { Column, Section, Title, Container, Card } from 'rbx';\nimport logoImage from '../../../assets/images/logo.png';\nimport '../../../styles/auth.scss';\nimport LoginForm from '../../../components/auth/login_form';\n\nconst LoginScreen = () => (\n    <Fragment>\n        <Header />\n        <Section size=\"medium\" className=\"auth\">\n            <Container>\n                <Column.Group centered>\n                    <Column size={3}>\n                        <Card>\n                            <Card.Content>\n                                <Section>\n                                    <Column.Group centered>\n                                        <Column size={12}>\n                                            <img src={logoImage} />\n                                        </Column>\n                                    </Column.Group>\n\n                                    <Column.Group>\n                                        <Column size={12}>\n                                            <Title size={6} className=\"has-text-grey has-text-centered\">\n                                                Your notes on the cloud\n                                            </Title>\n                                        </Column>\n                                    </Column.Group>\n                                    <LoginForm />\n                                </Section>\n                            </Card.Content>\n                        </Card>\n                    </Column>\n                </Column.Group>\n            </Container>\n        </Section>\n    </Fragment>\n);\n\nexport default LoginScreen;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/users/edit/index.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/screens/notes/index/index.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/register_form/index.js",["100","101","102"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction RegisterForm() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n    const [error, setError] = useState(false);\n\n    const HandleSubmit = async (evt) => {\n        evt.preventDefault();\n        try {\n            const user = await UsersService.register({ name: name, email: email, password: password });\n            setRedirectToLogin(true);\n        } catch (error) {\n            setError(true);\n        }\n    }\n\n    if (redirectToLogin)\n        return <Redirect to={{ pathname: \"/login\" }} />\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={HandleSubmit}>\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Name:</Label>\n                            <Control>\n                                <Input\n                                    type=\"name\"\n                                    required\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    required\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    required\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a className=\"button is-white has-text-custom-purple\"\n                                            onClick={e => setRedirectToLogin(true)}\n                                        >Login or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Register</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        {error && <Help color=\"danger\">Email or Password invalid</Help>}\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default RegisterForm;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/users.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/api.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/login_form/index.js",["103","104","105"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirectToRegister, setRedirectToRegister] = useState(false);\n    const [redirectToNotes, setRedirectToNotes] = useState(false);\n    const [error, setError] = useState(false);\n\n    const HandleSubmit = async (evt) => {\n        evt.preventDefault();\n        try {\n            const user = await UsersService.login({ email: email, password: password });\n            setRedirectToNotes(true);\n        } catch (error) {\n            setError(true);\n        }\n    }\n\n    if (redirectToRegister)\n        return <Redirect to={{ pathname: \"/register\" }} />\n    else if (redirectToNotes)\n        return <Redirect to={{ pathname: \"/notes\" }} />\n\n    return (\n        <Fragment>\n            <Column.Group centered>\n                <form onSubmit={HandleSubmit}>\n                    <Column size={12}>\n                        <Field>\n                            <Label size=\"small\">Email:</Label>\n                            <Control>\n                                <Input\n                                    type=\"email\"\n                                    required\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Label size=\"small\">Password:</Label>\n                            <Control>\n                                <Input\n                                    type=\"password\"\n                                    required\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Control>\n                        </Field>\n                        <Field>\n                            <Control>\n                                <Column.Group breakpoint=\"mobile\">\n                                    <Column>\n                                        <a className=\"button is-white has-text-custom-purple\"\n                                            onClick={e => setRedirectToRegister(true)}\n                                        >Register or</a>\n                                    </Column>\n                                    <Column>\n                                        <Button color=\"custom-purple\" outlined>Login</Button>\n                                    </Column>\n                                </Column.Group>\n                            </Control>\n                        </Field>\n                        {error && <Help color=\"danger\">Email or Password invalid</Help>}\n                    </Column>\n                </form>\n            </Column.Group>\n        </Fragment>\n    )\n}\n\nexport default LoginForm;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/auth/private_router/index.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/header_logged/index.js",["106","107","108","109"],"import React, { useState } from 'react';\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\nimport logoImage from '../../assets/images/logo-white.png';\nimport \"../../styles/header.scss\";\nimport UsersService from '../../services/users';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\nfunction HeaderLogged(props) {\n    const [redirectToHome, setRedirectToHome] = useState(false);\n\n    const logOut = async () => {\n        await UsersService.logout();\n        setRedirectToHome(true);\n    }\n\n    if (redirectToHome == true)\n        return <Redirect to={{ pathname: \"/\" }} />\n\n    return (\n        <Navbar color=\"custom-purple\" className=\"navbar-logged\">\n            <Navbar.Brand>\n                <Column.Group>\n                    <Column size=\"11\" offset=\"1\">\n                        <Link to=\"/notes\">\n                            <img src={logoImage} />\n                        </Link>\n                    </Column>\n                </Column.Group>\n            </Navbar.Brand>\n\n            <Navbar.Menu>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\n                    <Navbar.Item as=\"div\">\n                        <Button\n                            className=\"open-button\"\n                            color=\"white\"\n                            outlined\n                            onClick={() => props.setIsOpen(true)}>\n                            <FontAwesomeIcon icon={faList} />\n                        </Button>\n                    </Navbar.Item>\n                </Navbar.Segment>\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                    <Navbar.Item as=\"div\">\n                        <Dropdown>\n                            <Dropdown.Trigger>\n                                <Button className=\"button\" color=\"white\" outlined>\n                                    <span>Fernando ▼</span>\n                                </Button>\n                            </Dropdown.Trigger>\n                            <Dropdown.Menu>\n                                <Dropdown.Content>\n                                    <Dropdown.Item as=\"div\">\n                                        <Link to=\"/users/edit\">User Edit</Link>\n                                    </Dropdown.Item>\n                                    <Dropdown.Divider />\n                                    <Dropdown.Item as=\"div\">\n                                        <a href=\"#\" onClick={e => logOut()}>LogOut</a>\n                                    </Dropdown.Item>\n                                </Dropdown.Content>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Navbar.Item>\n                </Navbar.Segment>\n            </Navbar.Menu>\n        </Navbar>\n    )\n}\n\nexport default HeaderLogged;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/index.js",["110","111"],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/services/notes.js",[],"/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/list/index.js",["112"],"import React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction ListNotes(props) {\n    return (\n        <Fragment>\n            <Column.Group breakpoint=\"mobile\">\n                <Column size={6} offset={1}>\n                    <Title size={6}>\n                        {props.notes.length} Notes\n                    </Title>\n                </Column>\n                <Column size={2}>\n                    <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\n                        Notes +\n                    </Button>\n                </Column>\n            </Column.Group>\n            <List className=\"notes-list\">\n                {props.notes.map((item, key) =>\n                    <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\n                        <Title size={6}>\n                            {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\n                        </Title>\n                        <Title size={6} subtitle spaced={false}>\n                            {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\n                        </Title>\n\n                        <Column.Group breakpoint=\"mobile\">\n                            <Column size={10}>\n                                <Tag color=\"dark\">\n                                    {Moment(item.created_at).format('DD/MM')}\n                                </Tag>\n                            </Column>\n                            <Column size={2}>\n                                <FontAwesomeIcon\n                                    icon={faTrash}\n                                    onClick={() => props.deleteNote(item)}\n                                    color=\"grey\"\n                                />\n                            </Column>\n                        </Column.Group>\n                    </List.Item>\n                )}\n            </List>\n        </Fragment>\n    )\n}\n\nexport default ListNotes;","/Users/fernandomoreira/Desktop/CursoReactJS/evernote-clone/src/components/notes/editor/index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":2,"column":24,"nodeType":"119","messageId":"120","endLine":2,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":13,"column":25,"nodeType":"124","endLine":13,"endColumn":48},{"ruleId":"122","severity":1,"message":"123","line":28,"column":25,"nodeType":"124","endLine":28,"endColumn":56},{"ruleId":"122","severity":1,"message":"123","line":20,"column":45,"nodeType":"124","endLine":20,"endColumn":68},{"ruleId":"122","severity":1,"message":"123","line":20,"column":45,"nodeType":"124","endLine":20,"endColumn":68},{"ruleId":"117","severity":1,"message":"121","line":2,"column":49,"nodeType":"119","messageId":"120","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"125","line":16,"column":19,"nodeType":"119","messageId":"120","endLine":16,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":71,"column":41,"nodeType":"124","endLine":73,"endColumn":42},{"ruleId":"117","severity":1,"message":"121","line":2,"column":49,"nodeType":"119","messageId":"120","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"125","line":16,"column":19,"nodeType":"119","messageId":"120","endLine":16,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":61,"column":41,"nodeType":"124","endLine":63,"endColumn":42},{"ruleId":"117","severity":1,"message":"128","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":18,"column":24,"nodeType":"131","messageId":"132","endLine":18,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":27,"column":29,"nodeType":"124","endLine":27,"endColumn":52},{"ruleId":"126","severity":1,"message":"133","line":60,"column":41,"nodeType":"124","endLine":60,"endColumn":77},{"ruleId":"117","severity":1,"message":"134","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":37,"column":29,"nodeType":"131","messageId":"132","endLine":37,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":24,"column":98,"nodeType":"131","messageId":"132","endLine":24,"endColumn":100},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Section' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]